!function(){var app=angular.module("hackbox",["ui.router","ui.bootstrap"]);app.config(function($stateProvider,$urlRouterProvider,$httpProvider){$urlRouterProvider.otherwise("/");var authenticated=["$q","$state","Auth",function($q,$state,Auth){var deferred=$q.defer();return Auth.isAuthenticated().then(function(response){response.data?deferred.resolve():(deferred.reject("Not logged in"),$state.go("landingPage"))}),deferred.promise}],access=["$state","$stateParams","$q","Room",function($state,$stateParams,$q,Room){var deferred=$q.defer();return Room.access($stateParams.roomId,function(response){response.data.access?(console.log("Room is accessible"),deferred.resolve()):(console.log("Room is not accessible"),deferred.reject("Room is not accessible"),$state.go("404"))}),deferred.promise}];$stateProvider.state("home",{url:"/",controller:"homeCtrl",templateUrl:"app/home/home.html",resolve:{authenticated:authenticated}}).state("landingPage",{url:"/",controller:"",templateUrl:"app/landingPage/landingPage.html"}).state("room",{url:"/room/:roomId",controller:"roomCtrl",templateUrl:"app/room/room.html",resolve:{access:access}}).state("404",{url:"/404",controller:"404Ctrl",templateUrl:"app/404/404.html"}).state("demo",{url:"/demo/:roomId",controller:"roomCtrl",templateUrl:"app/room/room.html",resolve:{access:access}})}).run(function($rootScope,$state,$log){$rootScope.$on("$stateChangeError",function(){$state.go("home",{reload:!0})})}),console.log("App loaded successfully")}(),function(){var app=angular.module("hackbox");app.filter("interviewFilter",function(){return function(items,time){for(var filtered=[],today=(Date.now(),new Date),i=0;i<items.length;i++){var item=items[i],startDay=new Date(item.start_time);switch(time){case"Today":startDay.setHours(0,0,0,0)===today.setHours(0,0,0,0)&&filtered.push(item);break;case"Upcoming":startDay.setHours(0,0,0,0)>today.setHours(0,0,0,0)&&filtered.push(item);break;case"Completed":startDay.setHours(0,0,0,0)<today.setHours(0,0,0,0)&&filtered.push(item)}}return filtered}})}(),function(){function Auth($http,$location,$window,$state){function signIn(){return $http({method:"GET",withCredentials:!0,url:"/auth/github"}).then(function(response){return response})}function logout(){return $http({method:"GET",url:"/auth/logout"}).then(function(response){return $state.go("home",{},{reload:!0}),response})}function isAuthenticated(){return $http({method:"POST",url:"/auth/checkloggedin"})}var instance={signIn:signIn,logout:logout,isAuthenticated:isAuthenticated};return instance}angular.module("hackbox").factory("Auth",Auth),Auth.$inject=["$http","$location","$window","$state"]}(),function(){function AttachTokens($window){function request(object){var token=$window.localStorage.getItem("hackboxAuth");return token&&(object.headers["x-access-token"]=token),object.headers["Allow-Control-Allow-Origin"]="*",object}var instance={request:request};return instance}angular.module("hackbox").factory("AttachTokens",AttachTokens),AttachTokens.$inject=["$window"]}(),function(){function HomeCtrl($scope,$modal,$state,$log,Auth,Room){$scope.showCreateInterview=!1,$scope.showLoadingCreateInterview=!1,$scope.isLoggedIn=!1,$scope.timeframe="Upcoming",$scope.interviewOrder="+start_time",$scope.incompleteInterviews=[],$scope.newInterview={},$scope.init=function(){Auth.isAuthenticated().then(function(response){response.data?(console.log("User is logged in, getting all interviews."),$scope.showCreateInterview=!0,$scope.isLoggedIn=!0,$scope.refreshInterviews()):console.log("User is not logged in")})},$scope.logout=function(){Auth.logout().then(function(){$scope.isLoggedIn=!1}),console.log("Logging out!")},$scope.joinRoom=function(interview){console.log("Joining: "+interview.roomId),$state.go("room",{roomId:interview.roomId})},$scope.remove=function(roomId){Room.deleteRoom(roomId,$scope.refreshInterviews)},$scope.quickRoom=function(){var room={time:new Date,user:"Demo User",email:"demoUser@email.com",name:"Demo Room"};Room.createRoom(room,function(response){console.log(response),$state.go("demo",{roomId:response.data._id})})},$scope.refreshInterviews=function(){$scope.incompleteInterviews=[],$scope.showLoadingCreateInterview=!0,Room.getUpcomingInterviews(function(response){var allInterviews=response.data;allInterviews.length>0?allInterviews.forEach(function(interview){console.log(interview);var emptyObj=0===Object.keys(interview).length;if(!emptyObj){var interview={start_time:interview.start_time,displayed_date:new Date(interview.start_time).toLocaleString("en-US",{weekday:"short",year:"numeric",month:"long",day:"numeric"}),displayed_time:new Date(interview.start_time).toLocaleString("en-US",{hour:"numeric",minute:"numeric",timeZoneName:"short"}),candidateName:interview.candidateName,candidateEmail:interview.candidateEmail,created_by:interview.created_by,roomId:interview.id};$scope.incompleteInterviews.push(interview),$scope.showLoadingCreateInterview=!1}}):$scope.showLoadingCreateInterview=!1})},$scope.setInterviewFilter=function(timeframe){$scope.timeframe=timeframe,"Completed"===timeframe?$scope.interviewOrder="-start_time":"Upcoming"===timeframe?$scope.interviewOrder="+start_time":$scope.interviewOrder="+start_time"},$scope.init()}angular.module("hackbox").controller("homeCtrl",HomeCtrl),HomeCtrl.$inject=["$scope","$modal","$state","$log","Auth","Room"]}(),function(){function RoomCtrl($rootScope,$timeout,$scope,$stateParams,TextEditor,Room,Drawing,$state){$scope.showCanvas=!1,$scope.saving=!1,$scope.roomId=$stateParams.roomId,$scope.isPeerTyping=!1,$scope.videoToggle=!1,$scope.displayOpen=!1,$scope.displayClose=!1,$scope.isCreator=!1,$scope.startTime,$scope.endTime;var isTypingPromise=null,AUTOSAVE_FREQUENCY_MS=6e4,saveInterval=null;$scope.$on("$destroy",function(){$scope.uninit(),clearInterval(saveInterval)}),$rootScope.$on("receivingData",function(){$scope.$apply(function(){$scope.isPeerTyping=!0,null!==isTypingPromise&&$timeout.cancel(isTypingPromise),isTypingPromise=$timeout(function(){$scope.isPeerTyping=!1},1e3)})}),$scope.init=function(){console.log("Initializing room controller"),Room.getRoom($scope.roomId,function(response){response.data.creator&&(TextEditor.initNotes(response.data.notes),TextEditor.assignKBShortcutsNotes($scope.saveTextAndCanvasData)),TextEditor.init(response.data.text),TextEditor.assignKBShortcuts($scope.saveTextAndCanvasData),response.data.canvas&&Drawing.updateCanvas(response.data.canvas),$scope.isCreator=response.data.creator,$scope.displayOpen=response.data.displayOpen,$scope.displayClose=response.data.displayClose,$scope.startTime=new Date(response.data.start_time).toLocaleString(),$scope.endTime=new Date(response.data.end_time).toLocaleString(),saveInterval=setInterval(function(){$scope.saveTextAndCanvasData()},AUTOSAVE_FREQUENCY_MS)})},$scope.uninit=function(){console.log("Leaving Room!")},$scope.saveData=function(dataObj){Room.saveRoom(dataObj,function(){$scope.saving=!1})},$scope.saveTextAndCanvasData=function(){$scope.saving=!0;var canvas=JSON.stringify(Drawing.getCanvas().toJSON()),text=[];TextEditor.getEditors().forEach(function(editor){var editorObj={editorId:editor.id,data:editor.editor.getSession().getValue()};text.push(editorObj)});var roomData={roomId:$scope.roomId,canvas:canvas,text:text};$scope.isCreator&&(roomData.notes=TextEditor.getNotes().editor.getSession().getValue()),$scope.saveData(roomData)},$scope.saveTimeData=function(startTime,endTime){$scope.saving=!0;var timeData={roomId:$scope.roomId,start_time:Date.parse(startTime),end_time:Date.parse(endTime)};$scope.saveData(timeData)},$scope.toggleCanvas=function(forceCanvasOff){void 0!==forceCanvasOff&&forceCanvasOff?$scope.showCanvas=!1:void 0===forceCanvasOff||forceCanvasOff?$scope.showCanvas=!$scope.showCanvas:$scope.showCanvas=!0,$scope.showCanvas||TextEditor.resizeAllEditors()},$scope.clearCanvas=function(){Drawing.clearCanvas()},$scope.toggleEraser=function(){Drawing.toggleEraser()},$scope.toggleVideo=function(){$scope.videoToggle=!$scope.videoToggle},$scope.openRoom=function(){$scope.startTime=(new Date).toLocaleString(),$scope.saveTimeData($scope.startTime,$scope.endTime),$scope.displayOpen=!1,$scope.displayClose=!0},$scope.closeRoom=function(){$scope.endTime=(new Date+6e4).toLocaleString(),$scope.saveTimeData($scope.startTime,$scope.endTime),$scope.displayClose=!1},console.log("Joining Interview with ID: "+$stateParams.roomId),$scope.init()}angular.module("hackbox").controller("roomCtrl",RoomCtrl),RoomCtrl.$inject=["$rootScope","$timeout","$scope","$stateParams","TextEditor","Room","Drawing","$state"]}(),function(){function Room($http){function createRoom(room,callback){return console.log("Creating room!",room),$http({method:"POST",url:"/room/create",data:room}).then(function(response){callback(response)})}function saveRoom(roomData,callback){return console.log("Saving canvas and text editor data..."),$http({method:"POST",url:"/room/save",data:roomData}).error(function(error){console.log("error",error),callback()}).then(function(response){console.log("http response",response),callback()})}function getRoom(roomId,callback){return console.log("Getting room data for room: ",roomId),$http({method:"GET",url:"/room/get"+roomId}).then(function(response){callback(response)})}function getUpcomingInterviews(callback){return console.log("Getting snapshot of all incomplete interviews for current user"),$http({method:"GET",url:"/room/home"}).then(function(response){callback(response)})}function deleteRoom(roomId,callback){return console.log("Deleting Room: ",roomId),$http({method:"DELETE",url:"/room/remove"+roomId}).then(function(response){callback(response)})}function access(roomId,callback){return console.log("Determining access to room",roomId),$http({method:"GET",url:"/room/access"+roomId}).then(function(response){callback(response)})}var instance={createRoom:createRoom,getRoom:getRoom,saveRoom:saveRoom,getUpcomingInterviews:getUpcomingInterviews,deleteRoom:deleteRoom,access:access};return instance}angular.module("hackbox").factory("Room",Room),Room.$inject=["$http"]}(),function(){function VideoCtrl($scope,$sce,$stateParams,IcecommWrapper){$scope.userVideoSource=null,$scope.peerVideoSource=null,$scope.userVideoConnected=!1,$scope.peerVideoConnected=!1,$scope.$on("$destroy",function(){$scope.uninit()}),$scope.init=function(roomName){var comm=IcecommWrapper.getIcecommInstance();comm.connect(roomName,{limit:5,audio:!0}),comm.on("local",function(peer){$scope.$apply(function(){$scope.userVideoSource=$sce.trustAsResourceUrl(peer.stream),$scope.userVideoConnected=!0})}),comm.on("connected",function(peer){$scope.$apply(function(){$scope.peerVideoSource=$sce.trustAsResourceUrl(peer.stream),$scope.peerVideoConnected=!0})}),comm.on("disconnect",function(peer){$scope.peerVideoSource="",$scope.peerVideoConnected=!1})},$scope.uninit=function(){console.log("Shutting down video and removing listeners."),IcecommWrapper.uninitialize()},$scope.init($stateParams.roomId)}angular.module("hackbox").controller("videoCtrl",VideoCtrl),VideoCtrl.$inject=["$scope","$sce","$stateParams","IcecommWrapper"]}(),function(){function IcecommWrapper(){function getIcecommInstance(){return comm||(comm=new Icecomm("RyGfR1DIOhvNIeu8EYuBxK1lRoZoiAkEOeo1ZihAvLLz0R",{debug:!0})),comm}function setDataListener(callback){getIcecommInstance().on("data",callback)}function uninitialize(){return comm?(console.log("Stopping Video"),comm.leave(!0),!0):!1}var comm=null,instance={getIcecommInstance:getIcecommInstance,setDataListener:setDataListener,uninitialize:uninitialize};return instance}angular.module("hackbox").factory("IcecommWrapper",IcecommWrapper),IcecommWrapper.$inject=[]}(),function(){function Sockets(){function on(eventName,callback){socket.on(eventName,function(){var args=Array.prototype.slice.call(arguments);callback&&callback.apply(socket,args)})}function emit(eventName,data,callback){socket.emit(eventName,data,function(){var args=Array.prototype.slice.call(arguments);callback&&callback.apply(socket,args)})}function disconnect(){console.log("disconnecting socket"),socket.disconnect()}var socket=io.connect(),instance={on:on,emit:emit,disconnect:disconnect};return instance}angular.module("hackbox").factory("Sockets",Sockets),Sockets.$inject=[]}(),function(){function DrawingCtrl($scope,Drawing,Sockets){$scope.drawingCanvas=null,$scope.isPeerDrawing=!1,$scope.$on("destroy",function(){$scope.uninit()}),$scope.init=function(){$scope.addCanvas(),$scope.initializeIO()},$scope.uninit=function(){console.log("Destroying Canvas"),Drawing.removeCanvas()},$scope.initializeIO=function(){Drawing.initializeIO($scope.isPeerDrawing),Sockets.on("toggleDrawingMessage",function(){$scope.isPeerDrawing=!$scope.isPeerDrawing,$scope.$digest(),console.log($scope.isPeerDrawing)})},$scope.stopIOListeners=function(){Drawing.stopIO()},$scope.addCanvas=function(){$scope.drawingCanvas=Drawing.makeCanvas()},$scope.toggleErasing=function(){Drawing.toggleErasing()},$scope.toggleDrawingMode=function(){$scope.drawingCanvas.isDrawingMode=!$scope.drawingCanvas.isDrawingMode},$scope.init()}angular.module("hackbox").controller("drawingCtrl",DrawingCtrl),DrawingCtrl.$inject=["$scope","Drawing","Sockets"]}(),function(){function Drawing(Sockets,$stateParams){function makeCanvas(){console.log("making a canvas");var newCanvas=$("<canvas></canvas>").attr("id","drawingCanvas");return $(".drawing-container").append(newCanvas),_fabricCanvas=new fabric.Canvas("drawingCanvas",{isDrawingMode:!0}),_fabricCanvas.setHeight(2e3),_fabricCanvas.setWidth(2e3),_fabricCanvas}function clearCanvas(){_fabricCanvas.clear(),Sockets.emit("clearCanvas")}function initializeIO(isPeerDrawing){_isPeerDrawing=isPeerDrawing,console.log("Initializing Sockets IO"),_socket=io(),Sockets.on("greeting",function(initialData){console.log("Socket connection initialized!",initialData),Sockets.emit("join room",{roomName:$stateParams.roomId})}),Sockets.on("coordinates",updateCanvas),Sockets.on("clearCanvas",function(){_fabricCanvas.clear()}),_fabricCanvas.on("mouse:down",function(isPeerDrawing){_currentlyDrawing=!0,Sockets.emit("toggleDrawingMessage")}),_fabricCanvas.on("mouse:up",function(){_currentlyDrawing=!1,Sockets.emit("toggleDrawingMessage"),sendData()})}function toggleEraser(){_currentlyErasing?(_fabricCanvas.freeDrawingBrush=new fabric.PencilBrush(_fabricCanvas),_fabricCanvas.freeDrawingBrush.width=1,_fabricCanvas.freeDrawingBrush.color="#000000",_currentlyErasing=!_currentlyErasing):(_fabricCanvas.freeDrawingBrush=new fabric.CircleBrush(_fabricCanvas),_fabricCanvas.freeDrawingBrush.width=20,_fabricCanvas.freeDrawingBrush.color="#FFFFFF",_currentlyErasing=!_currentlyErasing)}function stopIO(){Sockets.stopIO()}function getCanvas(){return _fabricCanvas}function removeCanvas(){var canvas=$(".canvas-container");return canvas?(canvas.remove(),!0):!1}function updateCanvas(data){_pendingData=!0;var pollCanvasStatus=function(){_currentlyDrawing?setTimeout(function(){pollCanvasStatus()},100):(_pendingData=!1,setTimeout(function(){_fabricCanvas.loadFromJSON(data,_fabricCanvas.renderAll.bind(_fabricCanvas))},100))};pollCanvasStatus()}function sendData(){if(_pendingData)console.log("Data Pending!");else{var json=JSON.stringify(_fabricCanvas.toJSON());Sockets.emit("coords",json)}}var _fabricCanvas=null,_socket=null,_currentlyErasing=!1,_currentlyDrawing=!1,_pendingData=!1,instance={makeCanvas:makeCanvas,initializeIO:initializeIO,stopIO:stopIO,clearCanvas:clearCanvas,getCanvas:getCanvas,toggleEraser:toggleEraser,updateCanvas:updateCanvas,removeCanvas:removeCanvas};return instance}angular.module("hackbox").factory("Drawing",Drawing),Drawing.$inject=["Sockets","$stateParams"]}(),function(){function TextEditorCtrl($scope,TextEditor){$scope.editors=TextEditor.getEditors(),$scope.notes=TextEditor.getNotes(),$scope.$on("$destroy",function(){console.log("Destroying text editors"),TextEditor.removeAllEditors()}),$scope.addTextEditor=function(saveFn){var editorId=TextEditor.addTextEditor();TextEditor.assignKBShortcuts(saveFn),null!==editorId&&TextEditor.peerAddEditor(editorId)},$scope.removeTextEditor=function(editorId){TextEditor.removeTextEditor(editorId),TextEditor.peerRemoveEditor(editorId)},$scope.setActiveEditor=function(editorId){TextEditor.setActiveEditor(editorId)},$scope.setActiveNotes=function(notesEditorId){TextEditor.setActiveNotes(notesEditorId)},$scope.deactivateTabs=function(){TextEditor.deactivateTabsAndEditors()}}angular.module("hackbox").controller("textEditorCtrl",TextEditorCtrl),TextEditorCtrl.$inject=["$scope","TextEditor"]}(),function(){function TextEditor($rootScope,IcecommWrapper){function init(savedEditors){loadSavedEditors(savedEditors),initializeDataListener()}function initNotes(notes){loadSavedNotes(notes)}function addTextEditor(id){var editorId=null;if(_editors.length<MAX_EDITORS){editorId=nextSmallestId(_editors,MAX_EDITORS),editorId=void 0!==id&&void 0===_editors[id]?id:nextSmallestId(_editors,MAX_EDITORS),deactivateTabsAndEditors();var tab={name:"Tab "+(editorId+1),active:!0},editor={id:editorId,tab:tab,editor:createEditor("#editors",editorId)};setEditorOnChangeListener(editor),_editors.push(editor)}else console.log("Cannot have more than "+MAX_EDITORS+" editors!");return editorId}function setActiveEditor(editorId){var editorToFocusOn=indexOfEditorWithId(editorId);deactivateTabsAndEditors(),setEditorActive(editorId),_editors[editorToFocusOn].tab.active=!0,_editors[editorToFocusOn].editor.focus(),_editors[editorToFocusOn].editor.navigateLineEnd()}function setActiveNotes(notesEditorId){deactivateTabsAndEditors(),setEditorActive(notesEditorId),_notes.tab.active=!0,_notes.editor.focus(),_notes.editor.navigateLineEnd()}function removeTextEditor(editorId){var switchEditorFocus=!1;if(_editors.length>1){$(".activeEditor").attr("id")==="editor"+editorId&&(switchEditorFocus=!0);var id="#editor"+editorId;$(id).remove();var idxToRemove=indexOfEditorWithId(editorId);-1!==idxToRemove&&(_editors[idxToRemove].editor.destroy(),_editors.splice(idxToRemove,1)),switchEditorFocus&&setActiveEditor(idxToRemove<_editors.length?_editors[idxToRemove].id:_editors[idxToRemove-1].id)}}function removeAllEditors(){_editors.forEach(function(editor){editor.editor.destroy()}),_notes.hasOwnProperty("editor")&&_notes.editor.destroy(),_notes={},_editors=[]}function resizeAllEditors(){_editors.forEach(function(editor){editor.editor.resize(),editor.editor.renderer.updateFull()})}function assignKBShortcuts(saveFn){_editors.forEach(function(editor){editor.editor.commands.addCommand({name:"saveFile",bindKey:{win:"Ctrl-S",mac:"Command-S",sender:"editor|cli"},exec:saveFn})})}function assignKBShortcutsNotes(saveFn){_notes.editor.commands.addCommand({name:"saveFile",bindKey:{win:"Ctrl-S",mac:"Command-S",sender:"editor|cli"},exec:saveFn})}function peerAddEditor(editorId){console.log("Add editor to peer!"),IcecommWrapper.getIcecommInstance().send({command:"addEditor",editorId:editorId})}function peerRemoveEditor(editorId){console.log("Remove Editor to peer!"),IcecommWrapper.getIcecommInstance().send({command:"removeEditor",editorId:editorId})}function getEditors(){return _editors}function getNotes(){return _notes}function createEditor(elementToAppendTo,editorId){$(elementToAppendTo).append('<div class="editor activeEditor" id="editor'+editorId+'"></div>');var editor=ace.edit("editor"+editorId),defaultText="// Enter code here.";return editor.$blockScrolling=1/0,editor.setTheme("ace/theme/monokai"),editor.getSession().setMode("ace/mode/javascript"),editor.setShowPrintMargin(!1),editor.setValue(defaultText,1),editor.focus(),editor.navigateLineEnd(),editor}function addNotesEditor(){var tab={name:"Notes",active:!1};_notes.id=MAX_EDITORS+1,_notes.tab=tab,_notes.editor=createEditor("#editors",MAX_EDITORS+1)}function initializeDataListener(){var comm=IcecommWrapper.getIcecommInstance();comm.on("connected",function(peer){comm.isHost()&&(console.log("Sending Peer my data"),_editors.forEach(function(editor){_okToSend&&comm.send({command:"setData",data:editor.editor.getSession().getValue(),editorId:editor.id})}))}),IcecommWrapper.setDataListener(onPeerData)}function setEditorOnChangeListener(editor){editor.editor.on("change",function(event){var text=editor.editor.getSession().getValue(),editorId=editor.id;_okToSend&&IcecommWrapper.getIcecommInstance().send({command:"setData",data:text,editorId:editorId})})}function setEditorText(text,editorId){var editorIdx=indexOfEditorWithId(editorId);if(-1!==editorIdx){var cursorPos=_editors[editorIdx].editor.getCursorPosition();_editors[editorIdx].editor.getSession().setValue(text,1),_editors[editorIdx].editor.moveCursorToPosition(cursorPos)}}function setNotesText(text){var cursorPos=_notes.editor.getCursorPosition();_notes.editor.getSession().setValue(text,1),_notes.editor.moveCursorToPosition(cursorPos)}function setEditorActive(editorId){var id="#editor"+editorId;$(id).addClass("activeEditor")}function deactivateAllEditors(){$(".editor").removeClass("activeEditor")}function deactivateTabsAndEditors(){deactivateAllEditors(),_editors.forEach(function(editor){editor.tab.active=!1}),_notes.tab&&(_notes.tab.active=!1)}function loadSavedEditors(savedEditors){savedEditors&&savedEditors.length>0?(savedEditors.forEach(function(savedEditor,i){addTextEditor(savedEditor.editorId),setEditorText(savedEditor.data,savedEditor.editorId)}),setActiveEditor(savedEditors[0].editorId)):addTextEditor()}function loadSavedNotes(notes){addNotesEditor(),setNotesText(notes)}function onPeerData(peer){switch(_okToSend=!1,peer.data.command){case"addEditor":$rootScope.$apply(function(){addTextEditor(peer.data.editorId)});break;case"removeEditor":$rootScope.$apply(function(){removeTextEditor(peer.data.editorId)});break;case"setData":$rootScope.$emit("receivingData"),setEditorText(peer.data.data,peer.data.editorId)}_okToSend=!0}function nextSmallestId(arr,limit){for(var ids={},i=0;i<arr.length;i++){var editor=arr[i];ids[editor.id]=!0}for(var i=0;limit>i;i++)if(ids[i]!==!0)return i;return 0}function indexOfEditorWithId(editorId){var idx=_editors.map(function(editor){return editor.id}).indexOf(editorId);return idx}var _editors=[],_notes={},_okToSend=!0,MAX_EDITORS=3,instance={init:init,initNotes:initNotes,addTextEditor:addTextEditor,setActiveEditor:setActiveEditor,setActiveNotes:setActiveNotes,resizeAllEditors:resizeAllEditors,removeTextEditor:removeTextEditor,removeAllEditors:removeAllEditors,deactivateTabsAndEditors:deactivateTabsAndEditors,assignKBShortcuts:assignKBShortcuts,assignKBShortcutsNotes:assignKBShortcutsNotes,peerAddEditor:peerAddEditor,peerRemoveEditor:peerRemoveEditor,getEditors:getEditors,getNotes:getNotes};return instance}angular.module("hackbox").factory("TextEditor",TextEditor),TextEditor.$inject=["$rootScope","IcecommWrapper"]}(),function(){function SigninCtrl($scope,$modal,$log){$scope.openSigninModal=function(){$modal.open({templateUrl:"/app/signin/signinModal.html",controller:"signinModalCtrl"})}}angular.module("hackbox").controller("signinCtrl",SigninCtrl),SigninCtrl.$inject=["$scope","$modal","$log"]}(),function(){function SigninModalCtrl($scope,$modalInstance,Auth){$scope.loading=!1,$scope.submit=function(){Auth.signIn()},$scope.showLoading=function(){$scope.loading=!0},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}angular.module("hackbox").controller("signinModalCtrl",SigninModalCtrl),SigninModalCtrl.$inject=["$scope","$modalInstance","Auth"]}(),function(){function ScheduleCtrl($scope,$modal,$log){$scope.openScheduleModal=function(){$modal.open({templateUrl:"/app/schedule/scheduleModal.html",controller:"scheduleModalCtrl",scope:$scope})}}angular.module("hackbox").controller("scheduleCtrl",ScheduleCtrl),ScheduleCtrl.$inject=["$scope","$modal","$log"]}(),function(){function ScheduleModalCtrl($scope,$modalInstance,Room,$state){$scope.loading=!1,$scope.createInterview=function(){$scope.loading=!0,Room.createRoom($scope.newInterview,function(){$scope.newInterview.sendEmail=!1,$scope.newInterview.name=null,$scope.newInterview.email=null,$scope.newInterview.time=null,$scope.exitModal()})},$scope.exitModal=function(){setTimeout(function(){$scope.loading=!1,$modalInstance.dismiss("cancel"),$scope.refreshInterviews()},2e3)}}angular.module("hackbox").controller("scheduleModalCtrl",ScheduleModalCtrl),ScheduleModalCtrl.$inject=["$scope","$modalInstance","Room","$state"]}(),function(){function bigcontroller($scope,$modal,$state,$log,Auth,Room){$scope.showCreateInterview=!1,$scope.showLoadingCreateInterview=!1,$scope.showLogout=!1,$scope.incompleteInterviews=[],$scope.newInterview={},$scope.init=function(){Auth.isAuthenticated().then(function(response){response.data?(console.log("User is logged in, display logout."),$scope.showLogout=!0):console.log("User is not logged in")})},$scope.logout=function(){Auth.logout().then(function(){$scope.showLogout=!1}),console.log("Logging out!")},$scope.init()}angular.module("hackbox").controller("404Ctrl",bigcontroller),bigcontroller.$inject=["$scope","$modal","$state","$log","Auth","Room"]}(),function(){var app=angular.module("hackbox");app.directive("interviewBox",function(){return{restrict:"E",templateUrl:"/app/directives/interviewBox/interviewBox.html",scope:{interview:"=",removeFn:"&"}}})}();